<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/11/2025 5:14:29 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MOUSE-LAPTOP"
  DTS:CreatorName="MOUSE-LAPTOP\Aslbek Rakhmatov"
  DTS:DTSID="{F3F5774C-E8BE-488F-8369-F5088353A97A}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="12"
  DTS:VersionGUID="{0C787D12-B9BD-4F6B-A786-D53014B524DC}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{29F38189-F8F0-4E4E-B6A1-DCDA9A7FB245}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=D:\SSIS_HMFiles\lesson-7\excel1.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{299C7CC0-1C6B-4C51-BB8C-DBEE630878AA}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="D:\SSIS_HMFiles\lesson-7\txt.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="id"
              DTS:DTSID="{762A5234-9337-4D72-8E92-BC4CC6C4D107}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="name"
              DTS:DTSID="{BFF4C558-62C5-4CF9-9F98-131AD68BB8C1}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Mouse-Laptop.ssis_7]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{5B85D3B3-BE6F-4B62-AA6F-65D0E8AED111}"
      DTS:ObjectName="Mouse-Laptop.ssis_7">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=Mouse-Laptop;Initial Catalog=ssis_7;Provider=SQLOLEDB.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Package1-{5B85D3B3-BE6F-4B62-AA6F-65D0E8AED111}Mouse-Laptop.ssis_7;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{70F837FA-EDF9-4895-A5E9-C75068529461}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sourcefolder">
      <DTS:VariableValue
        DTS:DataType="8">D:\SSIS_HMFiles\lesson-7\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{6820F031-6C57-47EB-B6AA-6C8AC423BAB4}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_ff74129f5ad64a55876f380f86197334"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::sourcefolder">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ff74129f5ad64a55876f380f86197334")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ff74129f5ad64a55876f380f86197334")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using System;
using System.Data;
using System.Data.OleDb;
using System.Data.SqlClient;
using System.IO;
using System.Linq;
using System.Windows.Forms;
#endregion

namespace ST_ff74129f5ad64a55876f380f86197334
{
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        public void Main()
        {
            try
            {
                string sourcefolder = Dts.Variables["User::sourcefolder"].Value.ToString();
                string[] list_xsheets = new string[2] { "Sheet1$", "Sheet2$" };
                string outputfolder = sourcefolder;
                if (!Directory.Exists(sourcefolder))
                {
                    throw new Exception($"Source folder '{sourcefolder}' does not exist.");
                }

                var excelFiles = new DirectoryInfo(sourcefolder).GetFiles("*.xlsx");
                if (excelFiles.Length == 0)
                {
                    throw new Exception($"No Excel files found in '{sourcefolder}'.");
                }

                foreach (FileInfo files in excelFiles)
                {
                    string excelconn = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + files.FullName + ";Extended Properties=\"Excel 12.0 Xml;HDR=YES\";";
                    foreach (string sheet in list_xsheets)
                    {
                        try
                        {
                            using (OleDbConnection con = new OleDbConnection(excelconn))
                            {
                                OleDbCommand excelcmd = new OleDbCommand("SELECT * FROM [" + sheet + "]", con);
                                con.Open();
                                OleDbDataAdapter adpt = new OleDbDataAdapter(excelcmd);
                                DataTable dt = new DataTable();
                                adpt.Fill(dt);
                                con.Close();

                                if (dt.Rows.Count == 0)
                                {
                                    Dts.Log($"Warning: Sheet '{sheet}' in file '{files.Name}' is empty.", 0, null);
                                    continue;
                                }

                                if (!dt.Columns.Contains("ID") || !dt.Columns.Contains("Name"))
                                {
                                    throw new Exception($"Sheet '{sheet}' in file '{files.Name}' is missing required columns (ID, Name).");
                                }

                                using (SqlConnection sqlconn = new SqlConnection("Data Source=Mouse-Laptop;Initial Catalog=ssis_7;Integrated Security=SSPI;"))
                                {
                                    sqlconn.Open();
                                    using (SqlBulkCopy sqlbc = new SqlBulkCopy(sqlconn))
                                    {
                                        sqlbc.DestinationTableName = sheet.Replace("$", "");
                                        foreach (var column in dt.Columns)
                                        {
                                            sqlbc.ColumnMappings.Add(column.ToString(), column.ToString());
                                        }
                                        sqlbc.WriteToServer(dt);
                                    }
                                    sqlconn.Close();
                                }

                                string txtFileName = Path.Combine(outputfolder, files.Name.Replace(".xlsx", "_") + sheet.Replace("$", "") + ".txt");
                                using (StreamWriter writer = new StreamWriter(txtFileName, false))
                                {
                                    writer.WriteLine(string.Join(",", dt.Columns.Cast<DataColumn>().Select(c => c.ColumnName)));

                                    foreach (DataRow row in dt.Rows)
                                    {
                                        string[] fields = row.ItemArray.Select(field => field?.ToString().Replace(",", "") ?? "").ToArray();
                                        writer.WriteLine(string.Join(",", fields));
                                    }
                                }
                            }
                        }
                        catch (OleDbException ex)
                        {
                            Dts.Log($"Error processing sheet '{sheet}' in file '{files.Name}': {ex.Message}", 0, null);
                            continue; // Skip to next sheet
                        }
                        catch (IOException ex)
                        {
                            Dts.Log($"Error writing to text file for sheet '{sheet}' in file '{files.Name}': {ex.Message}", 0, null);
                            continue; // Skip to next sheet
                        }
                    }

                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Log($"General error: {ex.Message}\nStackTrace: {ex.StackTrace}", 0, null);
                MessageBox.Show($"Error: {ex.Message}\nStackTrace: {ex.StackTrace}");
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ff74129f5ad64a55876f380f86197334.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ff74129f5ad64a55876f380f86197334.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ff74129f5ad64a55876f380f86197334.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ff74129f5ad64a55876f380f86197334.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ff74129f5ad64a55876f380f86197334.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_ff74129f5ad64a55876f380f86197334</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_ff74129f5ad64a55876f380f86197334</msb:DisplayName>
    <msb:ProjectId>{0870ADF1-FA80-4280-BE37-CACF5822E3F1}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_ff74129f5ad64a55876f380f86197334.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ff74129f5ad64a55876f380f86197334.Properties.Settings.get_Default():ST_ff74129f5ad64a55876f380f86197334.Properties.Sett" +
    "ings")]

namespace ST_ff74129f5ad64a55876f380f86197334.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_ff74129f5ad64a55876f380f86197334.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C0E07E4F-A95F-4F51-A95E-0ED9F92FB1B0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_ff74129f5ad64a55876f380f86197334</RootNamespace>
    <AssemblyName>ST_ff74129f5ad64a55876f380f86197334</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <BinaryItem
            Name="ST_ff74129f5ad64a55876f380f86197334.dll">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
AgAAAMkBAAB3AAAAQAIAAAwAAAAAAAAAAgAAALkBAACcAAAAVQIAAAwAAAAAAAAAAgAAAO8CAABc
AAAASwMAABUAAAAAAAAAAgAAAKACAADCAAAAYgMAAAwAAAAAAAAAAgAAAMMAAACtAgAAcAMAAAwA
AAAAAAAAAAAAALoAAADHAgAAgQMAAE0AAAAYAAABAAAAALoAAADHAgAAzgMAAE0AAAAZAAABAAAA
AAAAAABKBAAASgQAAF0AAAAaAAABHgIoRAAACioeAihFAAAKKq5+AQAABC0ecgYEAHDQAwAAAihG
AAAKb0cAAApzSAAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKEkAAAoqLnMI
AAAGgAMAAAQqLnMLAAAGgAcAAAQqHgNvSgAACiqWAy0DFCsVA28UAAAKci4DAHByEgMAcG8rAAAK
JS0GJnISAwBwKkJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAGgGAAAjfgAA1AYA
ACAJAAAjU3RyaW5ncwAAAAD0DwAAeAQAACNVUwBsFAAAEAAAACNHVUlEAAAAfBQAALwCAAAjQmxv
YgAAAAAAAAACAAABVx2iCQkLAAAA+gEzABYAAAEAAAA/AAAABgAAAAkAAAANAAAAAwAAAEoAAAAC
AAAAEQAAAAEAAAACAAAAAwAAAAQAAAACAAAAAQAAAAcAAAABAAAAAgAAAAQAAAAAAAQFAQAAAAAA
BgCSAwcHBgAhBAcHBgDeAvQGDwB7BwAABgALA5wFBgB1A5wFBgBWA5wFBgAIBJwFBgCyA5wFBgDL
A5wFBgAiA5wFBgA9A08ECgDmA7MECgA0ArMEBgBEBnMADgD4BbAADgA0AaQADgAIBpQIDgAJCZQI
BgDNBhYIBgBeCDoFBgBTAToFBgCWBnMADgAiBrAABgAWBnMABgAnBjoFBgBBBToFBgCmAgcHBgA7
ADoFDgBnBaQABgDBAvQGBgCGBicHBgBNBocFEgCRAu4EEgDyAu4EEgBrAnIFCgDcBLMEFgC9B8EB
FgA+AcEBBgCEBDoFBgAVCXMABgBoBnMABgBZBnMADgD0ALAADgD7BTEGDgCuBrAADgCxBjEGDgDm
BaQADgBQAqQADgDRBaQADgCuBZQIDgBpBJQIBgCPBHMAGgBIAXYGBgAtAM8ABgBHARYIBgCjBnMA
DgDOCKQAHgDbCOwHHgB4COwHBgDzAToFBgBfAToFBgAACZwFAAAAAGoAAAAAAAEAAQABABAAVwVC
ADkAAQABAAAAEAAuB4oHVQABAAMAAAEQAOMHigeRAAMABwADAQAAOQgAAG0ABAAKAAMhEADLAAAA
VQAHAAoAEQBGBZcBEQAkApwBEQAYAaEBBgacAKUBVoApCKgBVoAEAqgBNgBmAKwBFgABALABFgAX
ALkBUCAAAAAAhgBdBQYAAQDgJQAAAACGGOcGBgABAOglAAAAAIMY5wYGAAEA8CUAAAAAkwiCBsEB
AQAcJgAAAACTCAwCxwEBACMmAAAAAJMIGALNAQEAKyYAAAAAlghsCNQBAgAyJgAAAACGGOcGBgAC
ADomAAAAAJEY7QbZAQIARiYAAAAAkRjtBtkBAgDoJQAAAACGGOcGBgACAFImAAAAAIMACgDdAQIA
WiYAAAAAgwAgAOMBAwAAAAEASQQAAAEA6AAAAAEA7gAJAOcGAQARAOcGBgAZAOcGCgApAOcGEAAx
AOcGEAA5AOcGEABBAOcGEABJAOcGEABRAOcGEABZAOcGEABhAOcGEABpAOcGBgDhAOcGBgD5AOcG
BgAZAecGFQBxADEIRQApAbkHSwAxATEFUQA5AT8EWACpAIIEXABJAUcIYABBAVcIZQDRAOcGEABR
AecGEABRAccHbABZAaUBXACBAOcGEABhAecGcwBpAVIFBgBxAecGegCJAOcGBgB5ASwFgQBpAYMC
BgCJAE4IhwCJAbYIjQBZAYMBXABBAVcIkQApAYsElwCJAAoInwCRAQEIpQCRAOcGEACZAOcGqgBB
AQEBsACZAIwBEACJAdkGtgChAKoIWACZANAHuwCZAeoAwQChAMUIyQCxAIkCBgCZAL8GzQCpAesB
0wC5AOcG2QCxAcAI3wAMAOcG+gCxAWUIAAFBAWIFIAHJAeEBEADRAeYIKwEUAOcG+gCxAfQIPAFB
AWIFTgHRACgBXAApAYUIAQDRAAkBXABBAVcIVQHZAdYIXQFxAOcGBgCpAOcGBgDpAXEBZAHpAfwI
bQEBAecGcwEhAecGBgDxALIBXAAIABQAjQEIABgAkgEpAHsAIQIuAAsA+QEuABMAAgIuABsAIQIu
ACMAKgIuACsAUwIuADMAUwIuADsAUwIuAEMAKgIuAEsAWQIuAFMAUwIuAFsAcAJDAGMAkgFJAHsA
IQJhAGsAkgFjAHMAkgHDAGsAkgEcAAMAAQAEAAMAAACGBugBAAAsAu4BAABwCPQBAgAEAAMAAgAF
AAUAAQAGAAUAAgAHAAcA8gAwAQSAAAABAAAAUSQucAAAAAAAAEIAAAAEAAAAAAAAAAAAAAB7AcIA
AAAAABAAAAAAAAAAAAAAAIQBlAQAAAAABAAAAAAAAAAAAAAAewGkAAAAAAAEAAAAAAAAAAAAAAB7
AToFAAAAABAAAAAAAAAAAAAAAIQBfQAAAAAABAAAAAAAAAAAAAAAewH4AQAAAAAEAAAAAAAAAAAA
AAB7AewHAAAAAAAAAAABAAAAOAcAAAUAAgAGAAIAbQDtAHEAGgFxADcBewBKAQAAADw+OV9fMF8w
ADxNYWluPmJfXzBfMAA8PjlfXzBfMQA8TWFpbj5iX18wXzEASUVudW1lcmFibGVgMQBGdW5jYDIA
U1RfZmY3NDEyOWY1YWQ2NGE1NTg3NmYzODBmODYxOTczMzQAPD45ADxNb2R1bGU+AFN5c3RlbS5J
TwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTeXN0ZW0uRGF0YQBTeXN0
ZW0uRGF0YS5PbGVEYgBtc2NvcmxpYgA8PmMAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAQWRk
AGZpZWxkAE9sZURiQ29tbWFuZABSZXBsYWNlAGdldF9TdGFja1RyYWNlAGRlZmF1bHRJbnN0YW5j
ZQBnZXRfTWVzc2FnZQBEYXRhVGFibGUAVmFyaWFibGUASUVudW1lcmFibGUASURpc3Bvc2FibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X05hbWUAc2V0X0Rlc3RpbmF0
aW9uVGFibGVOYW1lAGdldF9GdWxsTmFtZQBnZXRfQ29sdW1uTmFtZQBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lAFdyaXRlTGluZQBDb21iaW5lAFR5cGUAU3lzdGVtLkNvcmUARmFpbHVy
ZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2Jq
ZWN0TW9kZWxCYXNlAEludGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGlu
Z3NCYXNlAENsb3NlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0
ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmli
dXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2Vt
Ymx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNv
bmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxh
dGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJs
eUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9W
YWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFNxbEJ1bGtDb3B5Q29sdW1uTWFw
cGluZwBUb1N0cmluZwBMb2cAUGF0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABT
eXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfZmY3NDEyOWY1YWQ2NGE1NTg3NmYzODBmODYxOTczMzQu
ZGxsAEZpbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AT3BlbgBTY3JpcHRNYWlu
AEpvaW4ARGF0YUNvbHVtbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBTeXN0ZW0uUmVmbGVjdGlvbgBTcWxCdWxrQ29weUNvbHVtbk1hcHBpbmdDb2xsZWN0aW9uAERh
dGFDb2x1bW5Db2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAE9sZURiQ29ubmVjdGlvbgBTcWxD
b25uZWN0aW9uAElPRXhjZXB0aW9uAE9sZURiRXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBG
aWxlSW5mbwBDdWx0dXJlSW5mbwBGaWxlU3lzdGVtSW5mbwBEaXJlY3RvcnlJbmZvAFN5c3RlbS5M
aW5xAGdldF9SZXNvdXJjZU1hbmFnZXIAU3RyZWFtV3JpdGVyAFRleHRXcml0ZXIAT2xlRGJEYXRh
QWRhcHRlcgBXcml0ZVRvU2VydmVyAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNj
dG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5
c3RlbS5SZXNvdXJjZXMAU1RfZmY3NDEyOWY1YWQ2NGE1NTg3NmYzODBmODYxOTczMzQuUHJvcGVy
dGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2ZmNzQxMjlmNWFkNjRh
NTU4NzZmMzgwZjg2MTk3MzM0LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBHZXRGaWxlcwBnZXRf
Q29sdW1uTWFwcGluZ3MAU2V0dGluZ3MAU3lzdGVtLldpbmRvd3MuRm9ybXMAQ29udGFpbnMAZ2V0
X0NvbHVtbnMAU3lzdGVtLkNvbGxlY3Rpb25zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRz
AEV4aXN0cwBnZXRfUm93cwBDb25jYXQAT2JqZWN0AFNlbGVjdABnZXRfRGVmYXVsdABEaWFsb2dS
ZXN1bHQAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AGdldF9DdXJyZW50AGdl
dF9Db3VudABDYXN0AE1vdmVOZXh0AERhdGFSb3cAU2hvdwBNZXNzYWdlQm94AGdldF9JdGVtQXJy
YXkAVG9BcnJheQBnZXRfQXNzZW1ibHkAU3FsQnVsa0NvcHkARGlyZWN0b3J5AAAAJVUAcwBlAHIA
OgA6AHMAbwB1AHIAYwBlAGYAbwBsAGQAZQByAAAPUwBoAGUAZQB0ADEAJAAAD1MAaABlAGUAdAAy
ACQAAB9TAG8AdQByAGMAZQAgAGYAbwBsAGQAZQByACAAJwABIycAIABkAG8AZQBzACAAbgBvAHQA
IABlAHgAaQBzAHQALgABDSoALgB4AGwAcwB4AAAzTgBvACAARQB4AGMAZQBsACAAZgBpAGwAZQBz
ACAAZgBvAHUAbgBkACAAaQBuACAAJwABBScALgABXVAAcgBvAHYAaQBkAGUAcgA9AE0AaQBjAHIA
bwBzAG8AZgB0AC4AQQBDAEUALgBPAEwARQBEAEIALgAxADIALgAwADsARABhAHQAYQAgAFMAbwB1
AHIAYwBlAD0AAF07AEUAeAB0AGUAbgBkAGUAZAAgAFAAcgBvAHAAZQByAHQAaQBlAHMAPQAiAEUA
eABjAGUAbAAgADEAMgAuADAAIABYAG0AbAA7AEgARABSAD0AWQBFAFMAIgA7AAAfUwBFAEwARQBD
AFQAIAAqACAARgBSAE8ATQAgAFsAAANdAAAhVwBhAHIAbgBpAG4AZwA6ACAAUwBoAGUAZQB0ACAA
JwABFycAIABpAG4AIABmAGkAbABlACAAJwABFycAIABpAHMAIABlAG0AcAB0AHkALgABBUkARAAA
CU4AYQBtAGUAAA9TAGgAZQBlAHQAIAAnAAFTJwAgAGkAcwAgAG0AaQBzAHMAaQBuAGcAIAByAGUA
cQB1AGkAcgBlAGQAIABjAG8AbAB1AG0AbgBzACAAKABJAEQALAAgAE4AYQBtAGUAKQAuAAGAk0QA
YQB0AGEAIABTAG8AdQByAGMAZQA9AE0AbwB1AHMAZQAtAEwAYQBwAHQAbwBwADsASQBuAGkAdABp
AGEAbAAgAEMAYQB0AGEAbABvAGcAPQBzAHMAaQBzAF8ANwA7AEkAbgB0AGUAZwByAGEAdABlAGQA
IABTAGUAYwB1AHIAaQB0AHkAPQBTAFMAUABJADsAAQMkAAABAAsuAHgAbABzAHgAAANfAAAJLgB0
AHgAdAAAAywAADFFAHIAcgBvAHIAIABwAHIAbwBjAGUAcwBzAGkAbgBnACAAcwBoAGUAZQB0ACAA
JwABBycAOgAgAAFNRQByAHIAbwByACAAdwByAGkAdABpAG4AZwAgAHQAbwAgAHQAZQB4AHQAIABm
AGkAbABlACAAZgBvAHIAIABzAGgAZQBlAHQAIAAnAAEfRwBlAG4AZQByAGEAbAAgAGUAcgByAG8A
cgA6ACAAABsKAFMAdABhAGMAawBUAHIAYQBjAGUAOgAgAAAPRQByAHIAbwByADoAIAAAcVMAVABf
AGYAZgA3ADQAMQAyADkAZgA1AGEAZAA2ADQAYQA1ADUAOAA3ADYAZgAzADgAMABmADgANgAxADkA
NwAzADMANAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAhiI6xljt
DECxlDufGH/t7gAEIAEBCAMgAAEFIAEBEREEIAEBDgYgAQERgIkoBxYOHQ4OHRI9CBI9Dh0OCA4S
QRJFEkkSTRJRHBJZEl0dDhJhEmUSaQUgABKAlQUgABKAmQYgARKAnRwDIAAcAyAADgQAAQIOBgAD
Dg4ODgYgAR0SPQ4GIAIBDhJBBiABARKAsQUgAQgSRQUgABKAwQMgAAgFAAEOHQ4HIAMBDggdBQUg
ABKAyQQgAQIOBSABARJJBSACDg4OBCAAElEFIAASgM0HIAISgNEODgMgAAIFIAEBEkUFAAIODg4F
IAIBDgINEAEBFRKA3QEeABKA4QQKARJ5BxUSdQISeQ4FIAIBHBgZEAICFRKA3QEeARUSgN0BHgAV
EnUCHgAeAQUKAhJ5DgoAAg4OFRKA3QEOBCAAHRwGFRJ1AhwOBAoCHA4NEAEBHR4AFRKA3QEeAAMK
AQ4GAAIODh0OBwAEDg4ODg4GAAERgPEOCAABEoD1EYD5BSAAEoD9ByACAQ4SgP0It3pcVhk04IkI
iYRdzYCAzJEEAAAAAAQBAAAABAYSgIEEBhKAhQMGEhACBggDBhEUAwYSGAgGFRJ1AhJ5DgcGFRJ1
AhwOBQAAEoCBBQAAEoCFBgABARKAhQQAABIQAwAAAQUgAQ4SeQQgAQ4cBQgAEoCBBQgAEoCFBAgA
EhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NU
X2ZmNzQxMjlmNWFkNjRhNTU4NzZmMzgwZjg2MTk3MzM0AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAg
IDIwMjUAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAmD4AAAAAAAAAAAAAsj4AAAAg
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKQ+AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5k
bGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEALnBRJAAAAQAucFEkPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwBmAGYANwA0ADEAMgA5AGYANQBhAGQANgA0AGEANQA1ADgANwA2AGYAMwA4ADAAZgA4ADYAMQA5
ADcAMwAzADQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOQAyADkA
NwAuADIAOAA3ADEAOAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBm
AGYANwA0ADEAMgA5AGYANQBhAGQANgA0AGEANQA1ADgANwA2AGYAMwA4ADAAZgA4ADYAMQA5ADcA
MwAzADQALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUA
bQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAVABfAGYAZgA3ADQAMQAyADkAZgA1AGEAZAA2ADQAYQA1ADUAOAA3ADYAZgAzADgAMABmADgA
NgAxADkANwAzADMANAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AFQAXwBmAGYANwA0ADEAMgA5AGYANQBhAGQANgA0AGEANQA1ADgANwA2AGYAMwA4ADAAZgA4ADYA
MQA5ADcAMwAzADQAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADkAMgA5ADcALgAyADgANwAxADgAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADkAMgA5ADcALgAyADgANwAxADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAxD4AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="133.333333333334,42.6666666666667"
          Id="Package\Script Task"
          TopLeft="256.874988516793,61.5789466922964" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>